{"version":3,"sources":["woo-blocks.js"],"names":["wc","wcBlocksRegistry","React","wc_reepay","PAYMENT_METHOD_NAME","URL","document","currentScript","src","searchParams","get","registerPaymentMethod","createElement","useEffect","useState","Fragment","useSelect","useDispatch","wp","data","__","i18n","getSetting","wcSettings","PAYMENT_STORE_KEY","wcBlocksData","decodeEntities","htmlEntities","settings","label","title","tokens","push","id","Tokens","activeToken","setActiveToken","default_token","map","token","Token","className","TokenSaving","paymentMethodData","select","getPaymentMethodData","__internalSetPaymentMethodData","setPaymentMethodData","Img","image","image_alt","name","Radio","type","value","checked","onChange","Label","htmlFor","masked","expiry_month","expiry_year","key","toggleChecked","always_save_token","Checkbox","disabled","undefined","e","target","temp","Content","props","eventRegistration","emitResponse","onPaymentProcessing","onCheckoutAfterProcessingWithSuccess","onCheckoutAfterProcessingWithError","unsubscribe1","async","result","console","log","unsubscribe2","processingResponse","paymentDetails","reepay_id","accept_url","buildModalCheckout","unsubscribe3","responseTypes","SUCCESS","ERROR","FAIL","description","PaymentMethodLabel","components","text","content","edit","savedTokenComponent","canMakePayment","ariaLabel","supports","features","Object","values"],"mappings":"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","file":"woo-blocks.min.js","sourcesContent":["if (wc && wc.wcBlocksRegistry && React && wc_reepay) {\r\n    const PAYMENT_METHOD_NAME = (new URL(document.currentScript.src)).searchParams.get('name');\r\n\r\n    if (!PAYMENT_METHOD_NAME) {\r\n        throw 'Script ' + document.currentScript.src + ' - name is undefined';\r\n    }\r\n\r\n    /**\r\n     * External dependencies\r\n     */\r\n    const {registerPaymentMethod} = wc.wcBlocksRegistry;\r\n    const {createElement, useEffect, useState, Fragment} = React;\r\n    const {useSelect, useDispatch} = wp.data;\r\n    const {__} = wp.i18n;\r\n    const {getSetting} = wc.wcSettings;\r\n    const {PAYMENT_STORE_KEY} = wc.wcBlocksData;\r\n    const {decodeEntities} = wp.htmlEntities;\r\n\r\n    const settings = getSetting(PAYMENT_METHOD_NAME + '_data', {});\r\n\r\n    const label = decodeEntities(settings.title) || __('Reepay checkout', 'reepay-checkout-gateway');\r\n\r\n    if (settings.tokens) {\r\n        settings.tokens.push({\r\n            id: 'new'\r\n        })\r\n    }\r\n\r\n    const Tokens = createElement(() => {\r\n        const [activeToken, setActiveToken] = useState(settings.default_token)\r\n\r\n        const tokens = settings.tokens.map((token) => createElement(Token, {\r\n            token,\r\n            activeToken,\r\n            setActiveToken\r\n        }))\r\n\r\n        return createElement(\r\n            'ul',\r\n            {\r\n                className: 'reepay-blocks-list'\r\n            }\r\n            ,\r\n            ...tokens,\r\n            'new' === activeToken ? createElement(\r\n                'li',\r\n                null,\r\n                createElement(TokenSaving)\r\n            ) : null)\r\n    });\r\n\r\n    const Token = ({token, activeToken, setActiveToken}) => {\r\n        const {paymentMethodData} = useSelect((select) => ({\r\n            paymentMethodData: select(PAYMENT_STORE_KEY).getPaymentMethodData()\r\n        }));\r\n\r\n        const {__internalSetPaymentMethodData: setPaymentMethodData} = useDispatch(PAYMENT_STORE_KEY);\r\n\r\n        const Img = token.image ? createElement('img', {\r\n            'src': token.image,\r\n            'image_alt': token.label,\r\n        }) : null;\r\n\r\n        const name = `wc-${PAYMENT_METHOD_NAME}-payment-token`;\r\n\r\n        const Radio = createElement('input', {\r\n            'type': 'radio',\r\n            'name': name,\r\n            'id': `${name}-${token.id}`,\r\n            'value': token.id,\r\n            'checked': activeToken === token.id,\r\n            'onChange': () => {\r\n                if (paymentMethodData[name] !== token.id) {\r\n                    setPaymentMethodData({\r\n                        ...paymentMethodData,\r\n                        [name]: token.id\r\n                    })\r\n\r\n                    setActiveToken(token.id)\r\n                }\r\n            }\r\n        })\r\n\r\n        const Label = createElement(\r\n            'label',\r\n            {\r\n                'htmlFor': `wc-${PAYMENT_METHOD_NAME}-payment-token-${token.id}`,\r\n            },\r\n            Img,\r\n            'new' === token.id ?\r\n                __('Use a new payment method', 'reepay-checkout-gateway') :\r\n                `${token.masked} ${token.expiry_month}/${token.expiry_year}`\r\n        )\r\n\r\n        return createElement(\r\n            'li',\r\n            {\r\n                key: token.id,\r\n                className: 'reepay-blocks-list-item'\r\n            },\r\n            Radio,\r\n            Label\r\n        )\r\n    }\r\n\r\n    const TokenSaving = () => {\r\n        const [checked, toggleChecked] = useState(settings.always_save_token || false)\r\n\r\n        const {paymentMethodData} = useSelect((select) => ({\r\n            paymentMethodData: select(PAYMENT_STORE_KEY).getPaymentMethodData()\r\n        }));\r\n\r\n        const {__internalSetPaymentMethodData: setPaymentMethodData} = useDispatch(PAYMENT_STORE_KEY);\r\n\r\n        const name = `wc-${PAYMENT_METHOD_NAME}-new-payment-method`;\r\n\r\n        const Checkbox = createElement('input', {\r\n            'type': 'checkbox',\r\n            'name': name,\r\n            'id': name,\r\n            'value': true,\r\n            'checked': checked,\r\n            'disabled': settings.always_save_token || false,\r\n            'onChange': !settings.always_save_token ? (e) => {\r\n                if (e.target.checked) {\r\n                    setPaymentMethodData({\r\n                        ...paymentMethodData,\r\n                        [name]: 'true'\r\n                    })\r\n                } else {\r\n                    const temp = {...paymentMethodData}\r\n                    delete temp[name]\r\n                    setPaymentMethodData(temp)\r\n                }\r\n\r\n                toggleChecked(!checked)\r\n            } : undefined\r\n        })\r\n\r\n        const Label = createElement(\r\n            'label',\r\n            {\r\n                htmlFor: name\r\n            },\r\n            __('Save to account', 'reepay-checkout-gateway')\r\n        )\r\n\r\n        return createElement(\r\n            Fragment,\r\n            {},\r\n            Checkbox,\r\n            Label\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Content component\r\n     */\r\n    const Content = createElement((props) => {\r\n        const {eventRegistration, emitResponse} = props;\r\n        const {\r\n            onPaymentProcessing,\r\n            onCheckoutAfterProcessingWithSuccess,\r\n            onCheckoutAfterProcessingWithError\r\n        } = eventRegistration;\r\n\r\n        useEffect(() => {\r\n            const unsubscribe1 = onPaymentProcessing(async (result) => {\r\n                console.log('onPaymentProcessing', result);\r\n            });\r\n\r\n            const unsubscribe2 = onCheckoutAfterProcessingWithSuccess(async (result) => {\r\n                console.log('onCheckoutAfterProcessingWithSuccess', result);\r\n                const {processingResponse} = result;\r\n                const {paymentDetails} = processingResponse;\r\n\r\n                if (paymentDetails.reepay_id && paymentDetails.accept_url) {\r\n                    wc_reepay.buildModalCheckout(paymentDetails.reepay_id, paymentDetails.accept_url);\r\n                }\r\n            });\r\n\r\n            const unsubscribe3 = onCheckoutAfterProcessingWithError(async (result) => {\r\n                console.log('onCheckoutAfterProcessingWithSuccess', result);\r\n            });\r\n\r\n            // Unsubscribes when this component is unmounted.\r\n            return () => {\r\n                unsubscribe1();\r\n                unsubscribe2();\r\n                unsubscribe3();\r\n            };\r\n        }, [\r\n            emitResponse.responseTypes.SUCCESS,\r\n            emitResponse.responseTypes.ERROR,\r\n            emitResponse.responseTypes.FAIL,\r\n        ]);\r\n\r\n        if (settings.tokens) {\r\n            return Tokens;\r\n        } else {\r\n            return decodeEntities(settings.description || \"\");\r\n        }\r\n    }, null);\r\n\r\n    /**\r\n     * Label component\r\n     *\r\n     * @param {*} props Props from payment API.\r\n     */\r\n    const Label = createElement(props => {\r\n        const {PaymentMethodLabel} = props.components;\r\n        return createElement(PaymentMethodLabel, {text: label})\r\n    }, null)\r\n\r\n    /**\r\n     * Payment method config.\r\n     */\r\n    registerPaymentMethod({\r\n        name: PAYMENT_METHOD_NAME,\r\n        label: Label,\r\n        content: Content,\r\n        edit: Content,\r\n        savedTokenComponent: null,\r\n        canMakePayment: () => true,\r\n        ariaLabel: label,\r\n        supports: {\r\n            features: Object.values(settings.supports ?? {}),\r\n            // showSavedCards: settings.supports.includes('cards'),\r\n            // showSaveOption: settings.supports.includes('cards')\r\n        },\r\n    });\r\n}\r\n"]}