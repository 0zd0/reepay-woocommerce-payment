{"version":3,"sources":["woo-blocks.js"],"names":["wc","wcBlocksRegistry","React","wc_reepay","PAYMENT_METHOD_NAME","URL","document","currentScript","src","searchParams","get","registerPaymentMethod","createElement","useEffect","useState","useSelect","useDispatch","wp","data","__","i18n","getSetting","wcSettings","PAYMENT_STORE_KEY","wcBlocksData","decodeEntities","htmlEntities","settings","label","title","tokens","push","id","Tokens","activeToken","setActiveToken","default_token","map","token","Token","className","console","log","paymentMethodData","select","getPaymentMethodData","__internalSetPaymentMethodData","setPaymentMethodData","Img","image","image_alt","name","Radio","type","value","checked","onChange","parseInt","Label","htmlFor","masked","expiry_month","expiry_year","key","Content","props","eventRegistration","emitResponse","onPaymentProcessing","onCheckoutAfterProcessingWithSuccess","onCheckoutAfterProcessingWithError","unsubscribe1","async","result","unsubscribe2","processingResponse","paymentDetails","reepay_id","accept_url","buildModalCheckout","unsubscribe3","responseTypes","SUCCESS","ERROR","FAIL","description","PaymentMethodLabel","components","text","content","edit","savedTokenComponent","canMakePayment","ariaLabel","supports","features","showSavedCards","includes","showSaveOption"],"mappings":"AAAA,GAAIA,IAAMA,GAAGC,kBAAoBC,OAASC,UAAW,CACjD,MAAMC,EAAsB,IAAKC,IAAIC,SAASC,cAAcC,KAAMC,aAAaC,IAAI,QAEnF,IAAKN,EACD,KAAM,UAAYE,SAASC,cAAcC,IAAM,uBAMnD,MAAMG,sBAACA,GAAyBX,GAAGC,kBAC7BW,cAACA,EAAaC,UAAEA,EAASC,SAAEA,GAAYZ,OACvCa,UAACA,EAASC,YAAEA,GAAeC,GAAGC,MAC9BC,GAACA,GAAMF,GAAGG,MACVC,WAACA,GAAcrB,GAAGsB,YAClBC,kBAACA,GAAqBvB,GAAGwB,cACzBC,eAACA,GAAkBR,GAAGS,aAEtBC,EAAWN,EAAWjB,EAAsB,QAAS,IAErDwB,EAAQH,EAAeE,EAASE,QAAUV,EAAG,kBAAmB,2BAEnEQ,EAASG,QACRH,EAASG,OAAOC,KAAK,CACjBC,GAAI,QAIZ,MAAMC,EAASrB,GAAc,KACzB,MAAOsB,EAAaC,GAAkBrB,EAAUa,EAASS,eAEnDN,EAASH,EAASG,OAAOO,KAAKC,GAAU1B,EAAc2B,EAAO,CAC/DD,MAAAA,EACAJ,YAAAA,EACAC,eAAAA,MAGJ,OAAOvB,EAAc,KAAM,CACvB4B,UAAW,yBACTV,MAGJS,EAAQ,EAAED,MAAAA,EAAOJ,YAAAA,EAAaC,eAAAA,MAChCM,QAAQC,IAAIR,GAEZ,MAAMS,kBAACA,GAAqB5B,GAAW6B,IAAW,CAC9CD,kBAAmBC,EAAOrB,GAAmBsB,4BAG1CC,+BAAgCC,GAAwB/B,EAAYO,GAErEyB,EAAMV,EAAMW,MAAQrC,EAAc,MAAO,CAC3CJ,IAAO8B,EAAMW,MACbC,UAAaZ,EAAMV,QAClB,KAECuB,EAAO,MAAM/C,kBAEbgD,EAAQxC,EAAc,QAAS,CACjCyC,KAAQ,QACRF,KAAQA,EACRnB,GAAM,GAAGmB,KAAQb,EAAMN,KACvBsB,MAAShB,EAAMN,GACfuB,QAAWrB,IAAgBI,EAAMN,GACjCwB,SAAY,KACJb,EAAkBQ,KAAUb,EAAMN,KAClCe,EAAqB,IACdJ,EACHQ,CAACA,GAAOM,SAASnB,EAAMN,MAG3BG,EAAgBG,EAAMN,QAK5B0B,EAAQ9C,EACV,QACA,CACI+C,QAAW,MAAMvD,mBAAqCkC,EAAMN,MAEhEgB,EACA,QAAUV,EAAMN,GACZb,EAAG,2BAA4B,2BAC/B,GAAGmB,EAAMsB,UAAUtB,EAAMuB,gBAAgBvB,EAAMwB,eAGvD,OAAOlD,EACH,KACA,CACImD,IAAKzB,EAAMN,GACXQ,UAAW,2BAEfY,EACAM,IAOFM,EAAUpD,GAAeqD,IAC3B,MAAMC,kBAAEA,EAAiBC,aAAEA,GAAiBF,GACtCG,oBAAEA,EAAmBC,qCAAEA,EAAoCC,mCAAGA,GAAsCJ,EAiC1G,OA/BArD,GAAW,KACP,MAAM0D,EAAeH,GAAqBI,MAAOC,IAC7ChC,QAAQC,IAAI,sBAAuB+B,MAGjCC,EAAeL,GAAsCG,MAAOC,IAC9DhC,QAAQC,IAAI,uCAAuC+B,GACnD,MAAME,mBAAEA,GAAuBF,GACzBG,eAAEA,GAAmBD,EAEvBC,EAAeC,WAAaD,EAAeE,YAC3C3E,UAAU4E,mBAAmBH,EAAeC,UAAWD,EAAeE,eAIxEE,EAAeV,GAAoCE,MAAOC,IAC5DhC,QAAQC,IAAI,uCAAuC+B,MAIvD,MAAO,KACHF,IACAG,IACAM,OAEL,CACCb,EAAac,cAAcC,QAC3Bf,EAAac,cAAcE,MAC3BhB,EAAac,cAAcG,OAG5BzD,EAASG,OACDG,EAEAR,EAAeE,EAAS0D,aAAe,MAEnD,MAOG3B,EAAQ9C,GAAcqD,IACxB,MAAMqB,mBAACA,GAAsBrB,EAAMsB,WACnC,OAAO3E,EAAc0E,EAAoB,CAACE,KAAM5D,MACjD,MAKHjB,EAAsB,CAClBwC,KAAM/C,EACNwB,MAAO8B,EACP+B,QAASzB,EACT0B,KAAM1B,EACN2B,oBAAqB,KACrBC,eAAgB,KAAM,EACtBC,UAAWjE,EACXkE,SAAU,CACNC,SAAUpE,EAASmE,UAAY,GAC/BE,eAAgBrE,EAASmE,SAASG,SAAS,SAC3CC,eAAgBvE,EAASmE,SAASG,SAAS","file":"woo-blocks.min.js","sourcesContent":["if (wc && wc.wcBlocksRegistry && React && wc_reepay) {\r\n    const PAYMENT_METHOD_NAME = (new URL(document.currentScript.src)).searchParams.get('name');\r\n\r\n    if (!PAYMENT_METHOD_NAME) {\r\n        throw 'Script ' + document.currentScript.src + ' - name is undefined';\r\n    }\r\n\r\n    /**\r\n     * External dependencies\r\n     */\r\n    const {registerPaymentMethod} = wc.wcBlocksRegistry;\r\n    const {createElement, useEffect, useState} = React;\r\n    const {useSelect, useDispatch} = wp.data;\r\n    const {__} = wp.i18n;\r\n    const {getSetting} = wc.wcSettings;\r\n    const {PAYMENT_STORE_KEY} = wc.wcBlocksData;\r\n    const {decodeEntities} = wp.htmlEntities;\r\n\r\n    const settings = getSetting(PAYMENT_METHOD_NAME + '_data', {});\r\n\r\n    const label = decodeEntities(settings.title) || __('Reepay checkout', 'reepay-checkout-gateway');\r\n\r\n    if(settings.tokens) {\r\n        settings.tokens.push({\r\n            id: 'new'\r\n        })\r\n    }\r\n\r\n    const Tokens = createElement(() => {\r\n        const [activeToken, setActiveToken] = useState( settings.default_token )\r\n\r\n        const tokens = settings.tokens.map((token) => createElement(Token, {\r\n            token,\r\n            activeToken,\r\n            setActiveToken\r\n        }))\r\n\r\n        return createElement('ul', {\r\n            className: 'reepay-blocks-list'\r\n        }, ...tokens)\r\n    });\r\n\r\n    const Token = ({token, activeToken, setActiveToken}) => {\r\n        console.log(activeToken);\r\n\r\n        const {paymentMethodData} = useSelect((select) => ({\r\n            paymentMethodData: select(PAYMENT_STORE_KEY).getPaymentMethodData()\r\n        }));\r\n\r\n        const {__internalSetPaymentMethodData: setPaymentMethodData} = useDispatch(PAYMENT_STORE_KEY);\r\n\r\n        const Img = token.image ? createElement('img', {\r\n            'src': token.image,\r\n            'image_alt': token.label,\r\n        }) : null;\r\n\r\n        const name = `wc-${PAYMENT_METHOD_NAME}-payment-token`;\r\n\r\n        const Radio = createElement('input', {\r\n            'type': 'radio',\r\n            'name': name,\r\n            'id': `${name}-${token.id}`,\r\n            'value': token.id,\r\n            'checked': activeToken === token.id,\r\n            'onChange': () => {\r\n                if( paymentMethodData[name] !== token.id) {\r\n                    setPaymentMethodData({\r\n                        ...paymentMethodData,\r\n                        [name]: parseInt(token.id)\r\n                    })\r\n\r\n                    setActiveToken( token.id )\r\n                }\r\n            }\r\n        })\r\n\r\n        const Label = createElement(\r\n            'label',\r\n            {\r\n                'htmlFor': `wc-${PAYMENT_METHOD_NAME}-payment-token-${token.id}`,\r\n            },\r\n            Img,\r\n            'new' === token.id ?\r\n                __('Use a new payment method', 'reepay-checkout-gateway') :\r\n                `${token.masked} ${token.expiry_month}/${token.expiry_year}`\r\n        )\r\n\r\n        return createElement(\r\n            'li',\r\n            {\r\n                key: token.id,\r\n                className: 'reepay-blocks-list-item'\r\n            },\r\n            Radio,\r\n            Label,\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Content component\r\n     */\r\n    const Content = createElement((props) => {\r\n        const { eventRegistration, emitResponse } = props;\r\n        const { onPaymentProcessing, onCheckoutAfterProcessingWithSuccess,  onCheckoutAfterProcessingWithError} = eventRegistration;\r\n\r\n        useEffect( () => {\r\n            const unsubscribe1 = onPaymentProcessing( async (result) => {\r\n                console.log('onPaymentProcessing', result);\r\n            } );\r\n\r\n            const unsubscribe2 = onCheckoutAfterProcessingWithSuccess( async (result) => {\r\n                console.log('onCheckoutAfterProcessingWithSuccess',result);\r\n                const { processingResponse } = result;\r\n                const { paymentDetails } = processingResponse;\r\n\r\n                if (paymentDetails.reepay_id && paymentDetails.accept_url) {\r\n                    wc_reepay.buildModalCheckout(paymentDetails.reepay_id, paymentDetails.accept_url);\r\n                }\r\n            } );\r\n\r\n            const unsubscribe3 = onCheckoutAfterProcessingWithError( async (result) => {\r\n                console.log('onCheckoutAfterProcessingWithSuccess',result);\r\n            } );\r\n\r\n            // Unsubscribes when this component is unmounted.\r\n            return () => {\r\n                unsubscribe1();\r\n                unsubscribe2();\r\n                unsubscribe3();\r\n            };\r\n        }, [\r\n            emitResponse.responseTypes.SUCCESS,\r\n            emitResponse.responseTypes.ERROR,\r\n            emitResponse.responseTypes.FAIL,\r\n        ] );\r\n\r\n        if(settings.tokens) {\r\n            return Tokens;\r\n        } else {\r\n            return decodeEntities(settings.description || \"\");\r\n        }\r\n    }, null);\r\n\r\n    /**\r\n     * Label component\r\n     *\r\n     * @param {*} props Props from payment API.\r\n     */\r\n    const Label = createElement(props => {\r\n        const {PaymentMethodLabel} = props.components;\r\n        return createElement(PaymentMethodLabel, {text: label})\r\n    }, null)\r\n\r\n    /**\r\n     * Payment method config.\r\n     */\r\n    registerPaymentMethod({\r\n        name: PAYMENT_METHOD_NAME,\r\n        label: Label,\r\n        content: Content,\r\n        edit: Content,\r\n        savedTokenComponent: null,\r\n        canMakePayment: () => true,\r\n        ariaLabel: label,\r\n        supports: {\r\n            features: settings.supports ?? [],\r\n            showSavedCards: settings.supports.includes('cards'),\r\n            showSaveOption: settings.supports.includes('cards')\r\n        },\r\n    });\r\n}\r\n"]}