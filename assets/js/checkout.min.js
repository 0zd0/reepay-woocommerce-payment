window.rp=new Reepay.ModalCheckout,jQuery(function(e){"use strict";if("undefined"==typeof wc_checkout_params)return!1;e(document).ajaxComplete(function(o,r,t){if(t.url===wc_checkout_params.checkout_url||t.url.indexOf("wc-ajax=complete_order")>-1){const o=r.responseText;try{const r=e.parseJSON(o);if(!r.hasOwnProperty("is_reepay_checkout"))return!1;wc_reepay.buildModalCheckout(r.reepay.id,r.accept_url)}catch(e){return!1}}}),e(document).ready(function(){if(window.location.hash.indexOf("#!reepay-pay")>-1){const e=document.location.hash.replace("#!reepay-pay",""),o=new URLSearchParams(e);let r=o.get("rid"),t=o.get("accept_url");window.setTimeout(function(){wc_reepay.buildModalCheckout(r,t),history.pushState("",document.title,window.location.pathname)},1e3)}})}),wc_reepay={buildModalCheckout:function(e,o){"OVERLAY"===WC_Gateway_Reepay_Checkout.payment_type?window.rp.show(e):window.rp=new Reepay.WindowCheckout(e),window.rp.addEventHandler(Reepay.Event.Accept,function(e){console.log("Accept",e);let r=o;for(let o in e)r=wc_reepay.setUrlParameter(r,o,e[o]);window.location.href=r}),window.rp.addEventHandler(Reepay.Event.Cancel,function(e){console.log("Cancel",e),wc_reepay.throw_error(WC_Gateway_Reepay_Checkout.cancel_text)}),window.rp.addEventHandler(Reepay.Event.Close,function(e){$("form.checkout").removeClass("processing").unblock(),console.log("Close",e)}),window.rp.addEventHandler(Reepay.Event.Error,function(e){console.log("Error",e),wc_reepay.throw_error(WC_Gateway_Reepay_Checkout.error_text)})},throw_error:function(e){jQuery(function(o){var r=o("form.checkout");r.removeClass("processing").unblock(),o(".woocommerce-NoticeGroup").remove();var t='<div class="woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout"><ul class="woocommerce-error" role="alert"><li>'+e+"</li></ul></div>";r.before(t);var c=o(".woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout");c.length||(c=o(".form.checkout")),c.length&&o("html, body").animate({scrollTop:c.offset().top-100},1e3)})},setUrlParameter:function(e,o,r){var t=e.split("?")[0],c="?"+e.split("?")[1],n=o+"="+r,a="?"+n;if(c){var l=new RegExp("([?&])"+o+"[^&]*"),u=new RegExp("([?&])"+o+"=[^&;]+[&;]?");a=null==r||""===r?(a=c.replace(u,"$1")).replace(/[&;]$/,""):null!==c.match(l)?c.replace(l,"$1"+n):c+"&"+n}return t+(a="?"===a?"":a)}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
